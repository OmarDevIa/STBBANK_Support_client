const fs = require('fs');
const path = require('path');
const stringSimilarity = require('string-similarity');

const knowledgeBasePath = path.join(__dirname, '../data/knowledge_base.json');

// Charger toutes les questions et r√©ponses depuis le fichier centralis√©
function loadAllKnowledge() {
    try {
        const content = JSON.parse(fs.readFileSync(knowledgeBasePath, 'utf-8'));
        if (content && content.questions_answers) {
            console.log("üìö Base de connaissances charg√©e avec succ√®s !");
            return content.questions_answers;
        } else {
            console.warn("‚ö†Ô∏è Le fichier knowledge_base.json est vide ou mal format√©.");
            return [];
        }
    } catch (err) {
        console.error(`‚ùå Erreur lors du chargement du fichier knowledge_base.json:`, err.message);
        return [];
    }
}

// Rechercher une r√©ponse dans la base de connaissances avec similarit√©
function findAnswer(question, knowledgeBase) {
    console.log("üîç Question pos√©e :", question);
    const lowerCaseQuestion = question.toLowerCase();

    // Extraire toutes les questions de la base de connaissances
    const questions = knowledgeBase.map(qa => qa.question.toLowerCase());

    // Trouver la question la plus similaire
    const bestMatch = stringSimilarity.findBestMatch(lowerCaseQuestion, questions);

    // V√©rifier si la similarit√© d√©passe un seuil (par exemple, 0.5)
    if (bestMatch.bestMatch.rating > 0.5) {
        const matchedQuestion = bestMatch.bestMatch.target;
        console.log("‚úÖ Question correspondante trouv√©e :", matchedQuestion);

        // Retourner la r√©ponse correspondante
        const qa = knowledgeBase.find(qa => qa.question.toLowerCase() === matchedQuestion);
        return qa.answer;
    }

    console.log("‚ùå Aucune correspondance suffisante trouv√©e.");
return "Je n'ai pas trouv√© d'information pour votre question. Pouvez-vous la reformuler ou poser une autre question ?";}

// Fonction principale pour traiter la question
function handleQuestion(question) {
    const knowledgeBase = loadAllKnowledge();
    return findAnswer(question, knowledgeBase);
}

module.exports = { handleQuestion };